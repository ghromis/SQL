Schema: 

Movie ( mID, title, year, director ) 
English: There is a movie with ID number mID, a title, a release year, and a director. 

Reviewer ( rID, name ) 
English: The reviewer with ID number rID has a certain name. 

Rating ( rID, mID, stars, ratingDate ) 
English: The reviewer rID gave the movie mIDa number of stars rating (1-5) on a certain ratingDate.

=========================================================================================

1. Find the titles of all movies directed by Steven Spielberg.

select title
from Movie
where director = 'Steven Spielberg'

=========================================================================================

2. Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. 

select distinct year
from Movie, Rating
where Rating. mID = Movie.mID and stars > 3;

=========================================================================================

3. Find the titles of all movies that have no ratings. 

select distinct title from Movie
except
select distinct title 
from Movie, Rating  
where Movie.mID = Rating.mID and stars > 1

=========================================================================================

4. Find the names of all reviewers who have ratings with a NULL value for the date. 

select name
from Reviewer, Rating
where Reviewer.rID = Rating.rID and ratingDate is NULL

=========================================================================================

5. Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. 


select distinct name, title, stars, ratingDate
from Movie, Reviewer, Rating
where Movie.mID = Rating.mID and Reviewer.rID = Rating.rID 

=========================================================================================

6. For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie. 

select distinct name, title
from Movie, Reviewer, Rating L, Rating H
where Movie.mID = H.mID and Reviewer.rID = H.rID and H.rID = L.rID and H.mID = L.mID and H.stars  > L.stars and H.ratingDate > L.ratingDate

=========================================================================================

7. For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title.

select distinct title, H.stars
from Movie, Rating L, Rating H
where Movie.mID = H.mID  and H.stars > L.stars
except
select distinct title, L.stars
from Movie, Rating L, Rating H
where Movie.mID = H.mID and H.stars > L.stars

=========================================================================================

8. List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order.

select title, avg (stars)
from Movie, Rating 
where Movie.mID = Rating.mID
group by Rating.mID
order by avg(stars) desc, title

=========================================================================================

9. Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, try writing the query without HAVING or without COUNT.

select distinct name
from Rating, Reviewer
where Reviewer.rID = Rating.rID 
group by Rating.rID
having count (stars ) > 2

=========================================================================================

10. For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. Sort by rating spread from highest to lowest, then by movie title. 

select title, max(stars) - min(stars) as spread
from Movie, Rating
where Movie.mID = Rating.mID
group by title
order by spread desc, title

=========================================================================================

11. Find the difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. (Make sure to calculate the average rating for each movie, then the average of those averages for movies before 1980 and movies after. Don't just calculate the overall average rating before and after 1980.) 

select Before.avgRatingB - After.avgRatingA
from (select avg (avgst) as avgRatingB from
            (select title, avg (stars) as avgst
             from Movie, Rating 
             where Movie.mID = Rating.mID and year < 1980
             group by title ))  as Before,
          (select avg (avgst) as avgRatingA from
            (select title, avg (stars) as avgst
             from Movie, Rating 
             where Movie.mID = Rating.mID and year > 1980
             group by title ))  as After

=========================================================================================

12. Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title. 

select M1.title,  M2.director
from Movie M1, Movie M2
where M1.director = M2.director
group by M1.title
having count(M1.director) >1
order by M1.director, M1.title

=========================================================================================

13. Find the movie(s) with the highest average rating. Return the movie title(s) and average rating.

select title, max (rating)
from (select title, avg(stars) as rating
         from Movie, Rating 
         where Movie.mID = Rating.mID
         group by title
          order by avg(stars)) 

=========================================================================================

14. Find the movie(s) with the lowest average rating. Return the movie title(s) and average rating


select title, rating
from (select title, avg(stars) as rating
from Movie, Rating
where Movie.mID = Rating.mID
group by title)
where not exists (select* from (select avg(stars) as T from Movie, Rating group by title) where rating >T)


=========================================================================================
15. For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL. 

select director, title, rating
from (select director, title, max(stars) as rating
         from Movie, Rating 
         where Movie.mID = Rating.mID and director not NULL
         group by director) 

=========================================================================================
16. Add the reviewer Roger Ebert to your database, with an rID of 209.

insert into Reviewer values (209, 'Roger Ebert')

=========================================================================================
17. Insert 5-star ratings by James Cameron for all movies in the database. Leave the review date as NULL.

Insert into Rating 
Select rID,mID,5,NULL 
from Reviewer,Movie 
where Reviewer.name = 'James Cameron'

=========================================================================================
18. For all movies that have an average rating of 4 stars or higher, add 25 to the release year. (Update the existing tuples; don't insert new tuples.)


update Movie
set year = (year + 25)
where mID in (select mID
                       from Rating 
                       group by mID 
                       having avg(stars) >= 4)

=========================================================================================
19. Remove all ratings where the movie's year is before 1970 or after 2000, and the rating is fewer than 4 stars.


delete from Rating
where exists (
    select *
    from Movie 
    where Movie.mID = Rating.mID and (year < 1970 or year > 2000) and stars < 4)


=========================================================================================